ncol(outcome_data)
outcome_data<-outcome[,c(2, 7, 17)]
outcome_data<-outcome_data[outcome_data[,2]=="TX",]
outcome_datra
outcome_data
outcome_data[,3]<-as.numeric(outcome_data[,3])
outcome_data
outcome_data[complete.cases(outcome_data)]
outcome_data[complete.cases(outcome_data),]
min(outcome_data[,3])
min(outcome_data[,3], na.rm=TRUE)
outcome_data[complete.cases(outcome_data),]
min(outcome_data[complete.cases(outcome_data),])
min(outcome_data[complete.cases(outcome_data),3])
min(outcome_data[complete.cases(outcome_data),1:3])
outcome_data[complete.cases(outcome_data),]
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
min(outcome_data[,3], na.rm=TRUE)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
nrow(outcome_data)
outcome_data
outcome_data<-outcome[,c(2, 7, 17)]
outcome_data<-outcome_data[outcome_data[,2]=="TX",]
outcome_data
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("TX", "pneumonia")
best("MD", "pneumonia")
best("MD", "heart attack")
unique(outcome_data[,2])
outcome_data<-outcome[,c(2, 7, 17)]
unique(outcome_data[,2])
best("GU", "heart attack")
best("HI", "heart attack")
best("HA", "heart attack")
states<-unique(outcome_data[,2])
states
states="TX"
states<-unique(outcome_data[,2])
states=="TX"
states[states=="TX"]
states[states=="AS"]
any(states="DX")
any(states=="DX")
any(states=="TX")
any(outcome_data[,2]="TX")
outcome_data
outcome_data<-outcome[,c(2, 7, 17)]
any(outcome_data[,1]="TX")
any(outcome_data[,1]=="TX")
outcome_data<-outcome[,c(2, 7, 17)]
any(outcome_data[,1]=="TX")
any(outcome_data[,2]=="TX")
any(outcome_data[,2]=="TZ")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("GU", "heart attack")
best("GZ", "heart attack")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("GU", "heart attack")
best("GZ", "heart attack")
best("GZ", "heart attac")
best("AZ", "heart attack")
names(outcome_data)
names(outcome)
source("submitscript3.R")
submit()
2
3
submit()
submit()
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/best.R')
best("tx","heart attack")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospotal("tx","heart attack")
rankhospital("tx","heart attack")
outcome_data
outcome_data<-outcome_data[outcome_data[,2]=="TX",]
outcome_data
outcome_data<-outcome_data[outcome_data[,3]!="Not Available",]
outcome_data
ncol(outcome_data)
sort(outcome_data)
sort(outcome_data[,3])
outcome_data[order(outcome_data[,3],)
]
outcome_data[order(outcome_data[,3]),]
outcome_data[order(outcome_data[,3], decreasing=FALSE),]
outcome_data[order(outcome_data[,3], decreasing=TRUE),]
head(outcome_data[order(outcome_data[,3], decreasing=TRUE),])
outcome_data<-outcome[,c(2, 7, 17)]
outcome_data<-outcome_data[outcome_data[,2]=="TX",]
outcome_data<-outcome_data[outcome_data[,3]!="Not Available",]
outcome_data
outcome_data[order(outcome_data[,3], decreasing=TRUE),]
outcome_data[,3]<-as.numeric(outcome_data[,3])
outcome_data[order(outcome_data[,3], decreasing=TRUE),]
outcome_data[order(outcome_data[,3], decreasing=FALSE),]
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart attack")
rankhospital("tx","heart failure")
rankhospital("tx","heart failure", 2)
rankhospital("tx","heart failure", 200)
rankhospital("tx","heart failure", 2000)
rankhospital("tx","heart failure", 20)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", 20)
rankhospital("tx","heart failure", 2)
rankhospital("tx","heart failure", 1)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", 1)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", 1)
rankhospital("tx","heart failure", "worst")
rankhospital("tx","heart failure", 100)
rankhospital("tx","heart failure", 5)
rankhospital("tx","heart failure", 4)
rankhospital("tx","heart failure", 3)
rankhospital("tx","heart failure", 2)
rankhospital("tx","heart failure", 6)
outcome_data[order(outcome_data[,3], decreasing=FALSE),]
head(outcome_data[order(outcome_data[,3], decreasing=FALSE),])
head(outcome_data[order(outcome_data[,2:3], decreasing=FALSE),])
head(outcome_data[order(outcome_data[,3], decreasing=FALSE),])
head(outcome_data[order(outcome_data[,3], outcome_data[,1], decreasing=FALSE),])
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", 6)
rankhospital("tx","heart failure", 3)
rankhospital("tx","heart failure", 4)
rankhospital("tx","heart failure", 5)
rankhospital("tx","heart failure", 500)
rankhospital("tx","heart failure", "tert")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", "tert")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", "best")
rankhospital("tx","heart failure", "worst")
rankhospital("tx","heart failure", 2)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("tx","heart failure", 2)
rankhospital("tx","heart failure", "worst")
rankhospital("tx","heart failure", "best")
rankhospital("tx","heart failure", 30000)
rankhospital("txz","heart failure", 30000)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankhospital.R')
rankhospital("txz","heart failure", 30000)
rankhospital("tx","heart failure", 30000)
rankhospital("tx","heart failur", 30)
rankhospital("tx","pneumonia", 30)
rankhospital("tx","pneumonia", 3)
rankhospital("NY","pneumonia", 3)
rankhospital("NY","pneumonia", 1)
rankhospital("KY","pneumonia", 1)
rankhospital("CA","pneumonia", 1)
rankhospital("CA","pneumonia", 10)
rankhospital("CA","pneumonia", 100000)
rankhospital("CA","pneumonia", 1)
rankhospital("Ca","pneumonia", 1)
rankhospital("Ca","pneumonia", "worst")
rankhospital("Ca","pneumonia", "best")
rankhospital("md","heart attack", "best")
rankhospital("md","heart attack", "worst")
submit()
submit()
submit()
submit()
rnorm(10,1)
outcome_data
outcome_data<-outcome[,c(2, 7, 17)]
outcome_data<-outcome_data[outcome_data[,3]!="Not Available",]
source('~/.active-rstudio-document')
outcome_data<-split(outcome_data, outcome_data$State)
outcom_data
outcome_data
head(outcome_data)
head(outcome_data,3)
head(outcome_data[,2],3)
head(outcome_data[,1],3)
head(outcome_data[1,],3)
outcome_data[1:3,]
dim(outcome_data)
outcome_data[1,]
outcome_data[,1]
outcome_data[1]
outcome_data[2]
outcome_data[2][2]
outcome_data[2][3]
outcome_data[[2]
]
outcome_data[[3]]
head(outcome_data[[3]],3)
head(outcome_data[[1:3]],3)
head(outcome_data[[1:4]],3)
head(outcome_data[[1]],3)
head(outcome_data[[5]],3)
head(outcome_data[5],3)
head(outcome_data[5][3],3)
dim(outcome_data[5])
outcome_data[5]
str(outcome_data[5])
outcome_data
lapply(outcome_data,order)
lapply(outcome_data,order, outcome_data[,3])
lapply(outcome_data,order, outcome_data$Hospital Name)
lapply(outcome_data,order, outcome_data$"Hospital Name")
head(lapply(outcome_data,order),3)
outcome_data[[1]]
paste(outcome_data)
outcome_data<-paste(outcome_data)
outcome_data
outcome_data<-outcome[,c(2, 7, 17)]
outcome_data<-outcome_data[outcome_data[,3]!="Not Available",]
head(outcome_data)
lapply(outcome_data[,2],order, outcome_data[,3])
outcome_data
outcome_data<-outcome_data[order(outcome_data[,2],outcome_data[,3], outcome_data[,1] ,decreasing=iOrder),]
outcome_data<-outcome_data[order(outcome_data[,2],outcome_data[,3], outcome_data[,1] ,decreasing=FALSE),]
head(outcome_data,10)
s<-split(outcome_data, outcome_data$State)
d<-s[1]
d
head(outcome_data,100)
d<-s[2]
d
lapply(s,function(x) x[1,])
lapply(s,function(x) {x[1,])
lapply(s,function(x) {
x<-x[order(x[,2],x[,3], x[,1] ,decreasing=FALSE),]
x[1,]
)
lapply(s,function(x) {
x<-x[order(x[,2],x[,3], x[,1] ,decreasing=FALSE),]
x[1,]
})
outcome_data[,3]<-as.numeric(outcome_data[,3])
s<-split(outcome_data, outcome_data$State)
lapply(s,function(x) {
x<-x[order(x[,2],x[,3], x[,1] ,decreasing=FALSE),]
x[1,]
})
head(outcome_data,100)
d<-lapply(s,function(x) {
x<-x[order(x[,2],x[,3], x[,1] ,decreasing=FALSE),]
x[1,]
})
d
as.dataframe(d)
as.data.frame(d)
a<-as.data.frame(d)
a
dim(a)
a[1,10]
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
rankall("heart attack", best)
rankall("heart attack", "best")
d<-rankall("heart attack", "best")
as.data.matrix(d)
as.data.frame(d)
d
merge(d)
data.frame(d)
rbind(d)
d<-rankall("heart attack", "best")
d[1]
d[2]
rbind(d[1], d[2])
data.frame(d)
matrix(d)
unsplit(d)
unsplit(d, d$state)
d<-unsplit(d, d$state)
d
d<-rankall("heart attack", "best")
d
d<-unsplit(d, d$state)
d
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", "best")
d
d<-unsplit(d, d$state)
d
d<-rankall("heart attack", "best")
lapply(d, rbind)
lapply(d, rbind)
lapply(d, rbind)
d
d<-rankall("heart attack", 100)
d
a<-c(1:10, a:z, 20:30)
a<-c(1:10, 20:30, 50:70)
a
b<-(1,2,3)
b<-c(1,2,3)
c<-split(a,b)
c
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
d[1]
d[21]
source('~/.active-rstudio-document')
c
unsplit(c, b)
merge(c)
c
levels(c)
level(c)
rebind(c)
rbind(c)
lbind
cbind(c)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
class(d)
str(d)
as.data.frame(d)
c<-as.data.frame(d)
c
dim(c)
c
d<-rankall("heart attack", 100)
d
matrix(unlist(d))
do.call(rbind.data.frame, d)
rbind.data.frame(d)
do.call(rbind.data.frame, d)
d
head(d)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
unsplit(d)
unsplit(d, d$State)
unsplit(d, d[,2])
unsplit(d, 1)
unsplit(d, 2)
unsplit(d, 3)
unsplit(d, c(1,2))
unsplit(d, c(1))
unsplit(d, c(2)
)
d
data.frame("abc","def","try")
c("abc","def","try")
c("asdc","dqweef","tdfghdfgry")
a<-c("abc","def","try")
b<-c("asdc","dqweef","tdfghdfgry")
rbind(a, b)
colname
colnames
rbind(a, b)
c<-rbind(a, b)
c
rownames(c)<-c[,3]
c
rownames(c, do.NULL=TRUE)
c
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
d<-rankall("heart attack", 100)
d
class(d)
class(c)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
rbind(d)
rbind(d, 1)
as.vector(d)
e<-as.vector(d)
e[,2]<-rownames(e)
e[,2]<-rownames(e[,2])
rownames(e[,2])
rownames(e)
rownames(e)
e
colnames(e)
levels(e)
factors(e)
levels(d)
rownames(d)
colnames(d)
d
e
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
unsplit(d,2)
unsplit(d,1)
is.factor(d)
is.factor(d$2)
is.factor(d$1)
unsplit(d,d$2)
unsplit(d,d$1)
unsplit(d,d$"2")
d
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
d<-rankall("heart attack", 1)
d
d<-rankall("heart attack", 1)
sapply(d)
c
sapply(d,c)
d
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 1)
d
sapply(d,c)
t(sapply(d,c))
data.frame(t(sapply(d,c)))
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 1)
data.frame(t(sapply(d,c)))
d<-rankall("heart attack", 100)
data.frame(t(sapply(d,c)))
e<-data.frame(t(sapply(d,c)))
rownames(e)
rownames(e[,2])
rownames(e[,])
e[,2]
e[,2]<-rownames(e)
e
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
d<-rankall("heart attack", 100)
d
d<-rankall("heart attack", 10)
d
d<-rankall("heart attack")
d
d<-rankall("heart attack",20)
d
tail(rankall("pneumonia","worst"),3)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
tail(rankall("pneumonia","worst"),3)
tail(rankall("heart failuer"),10)
tail(rankall("heart failure"),10)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"),10)
tail(rankall("pneumonia","worst"),3)
tail(rankall("pneumonia",12),3)
tail(rankall("pneumonia",12),5)
rankall("pneumonia","worst")
source('~/GitHub/DataScience/rProg/ProgrammingAssignment3/rankall.R')
rankall("pneumonia","worst")
tail(rankall("pneumonia",12),5)
tail(rankall("pneumonia",2),5)
submit()
submit()
submit()
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
system.time()
swirl()
library("swirl")
ls()
swirl()
TRUE==TRUE
(False==True)==False
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
NOT 5=7
5!=7
5==7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
insts
ints
ints>5
which(ints)
which(ints>7)
any(ints<0)
all(ints>0)
